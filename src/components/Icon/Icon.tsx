import { FC, ReactNode } from 'react'
import { useTheme } from 'styled-components'
import { StyledIcon } from './Icon.styled'

const iconTypes: Record<string, ReactNode> = {
	arrowLeft: (
		<path d="M7.12129 4.70711C7.51182 4.31658 7.51182 3.68342 7.12129 3.29289C6.73077 2.90237 6.0976 2.90237 5.70708 3.29289L1.70708 7.29289C1.31655 7.68342 1.31655 8.31658 1.70708 8.70711L5.70708 12.7071C6.0976 13.0976 6.73077 13.0976 7.12129 12.7071C7.51182 12.3166 7.51182 11.6834 7.12129 11.2929L4.8284 9L14.4142 9C14.9665 9 15.4142 8.55229 15.4142 8C15.4142 7.44772 14.9665 7 14.4142 7L4.8284 7L7.12129 4.70711Z" />
	),
	check: (
		<path d="M14.707 3.29305C14.8946 3.48074 15 3.73528 15 4.00068C15 4.26608 14.8946 4.52062 14.707 4.70831L6.6998 12.7155C6.51211 12.9031 6.25757 13.0085 5.99217 13.0085C5.72677 13.0085 5.47223 12.9031 5.28454 12.7155L1.28096 8.71189C1.09864 8.52312 0.997757 8.27029 1.00004 8.00786C1.00232 7.74543 1.10758 7.49439 1.29316 7.30882C1.47873 7.12324 1.72977 7.01798 1.9922 7.0157C2.25463 7.01342 2.50746 7.1143 2.69623 7.29662L5.99217 10.5926L13.2917 3.29305C13.4794 3.10541 13.7339 3 13.9993 3C14.2647 3 14.5193 3.10541 14.707 3.29305Z" />
	),
	plus: (
		<path d="M7 15C7 15.5523 7.44772 16 8 16C8.55229 16 9 15.5523 9 15V9H15C15.5523 9 16 8.55229 16 8C16 7.44772 15.5523 7 15 7H9V1C9 0.447715 8.55229 0 8 0C7.44772 0 7 0.447715 7 1V7H1C0.447715 7 0 7.44772 0 8C0 8.55229 0.447715 9 1 9H7V15Z" />
	),
	close: (
		<path d="M1.34124 1.35581C1.5598 1.13732 1.8562 1.01457 2.16524 1.01457C2.47429 1.01457 2.77069 1.13732 2.98925 1.35581L7.99271 6.35928L12.9962 1.35581C13.1037 1.2445 13.2323 1.15571 13.3745 1.09462C13.5167 1.03354 13.6696 1.00139 13.8244 1.00004C13.9791 0.998699 14.1326 1.02819 14.2758 1.08679C14.4191 1.14539 14.5492 1.23193 14.6586 1.34137C14.7681 1.4508 14.8546 1.58093 14.9132 1.72416C14.9718 1.8674 15.0013 2.02087 15 2.17562C14.9986 2.33037 14.9665 2.48331 14.9054 2.62551C14.8443 2.7677 14.7555 2.89631 14.6442 3.00382L9.64072 8.00728L14.6442 13.0107C14.8565 13.2306 14.974 13.525 14.9713 13.8306C14.9687 14.1361 14.8461 14.4285 14.63 14.6446C14.4139 14.8607 14.1216 14.9832 13.816 14.9859C13.5104 14.9885 13.216 14.8711 12.9962 14.6588L7.99271 9.65529L2.98925 14.6588C2.76943 14.8711 2.47503 14.9885 2.16944 14.9859C1.86385 14.9832 1.57153 14.8607 1.35544 14.6446C1.13935 14.4285 1.01677 14.1361 1.01412 13.8306C1.01146 13.525 1.12894 13.2306 1.34124 13.0107L6.34471 8.00728L1.34124 3.00382C1.12274 2.78526 1 2.48886 1 2.17982C1 1.87077 1.12274 1.57437 1.34124 1.35581Z" />
	),
	account: (
		<path d="M1 8C1 4.13401 4.13401 1 8 1C11.866 1 15 4.13401 15 8C15 10.1111 14.0655 12.0039 12.5876 13.2873C12.3503 13.4934 12 13.3143 12 13C12 10.7909 10.2091 9 8 9C5.79086 9 4 10.7909 4 13C4 13.3143 3.64971 13.4934 3.41242 13.2873C1.93451 12.0039 1 10.1111 1 8ZM8 4C6.89543 4 6 4.89543 6 6C6 7.10457 6.89543 8 8 8C9.10457 8 10 7.10457 10 6C10 4.89543 9.10457 4 8 4Z" />
	),
	repeat: (
		<path d="M14.9859 5.65799C14.9768 5.79458 14.9335 5.9266 14.8561 6.05408C14.7786 6.18156 14.6806 6.2453 14.5621 6.2453H10.0505C9.83179 6.2544 9.72698 6.09961 9.73609 5.78092L11.4587 4.05998C10.4652 3.18586 9.31227 2.7488 7.99981 2.7488C7.05192 2.7488 6.17466 2.98326 5.36805 3.45219C4.56143 3.92113 3.92342 4.55851 3.45403 5.36434C2.98465 6.17018 2.74995 7.04885 2.74995 8.00038C2.74995 8.9519 2.98465 9.8283 3.45403 10.6296C3.92342 11.4309 4.56143 12.066 5.36805 12.5349C6.17466 13.0038 7.05192 13.2383 7.99981 13.2383C8.80187 13.2383 9.55608 13.0676 10.2624 12.7261C10.7056 12.5119 11.1066 12.2466 11.4654 11.9303C11.8234 11.6146 12.3607 11.5472 12.7368 11.8411C13.1237 12.1435 13.1913 12.7094 12.8366 13.0492C12.3099 13.5538 11.7093 13.9697 11.0349 14.2968C10.087 14.7566 9.0753 14.9865 7.99981 14.9865C7.05192 14.9865 6.14504 14.8022 5.27918 14.4334C4.41332 14.0646 3.66822 13.5684 3.04389 12.9446C2.41956 12.3209 1.92283 11.5765 1.5537 10.7115C1.18457 9.84651 1 8.94052 1 7.99355C1 7.04658 1.18457 6.14286 1.5537 5.28239C1.92283 4.42193 2.41956 3.67983 3.04389 3.05611C3.66822 2.43238 4.41332 1.93613 5.27918 1.56736C6.14504 1.19859 7.05192 1.0142 7.99981 1.0142C8.8839 1.0142 9.72926 1.17355 10.5359 1.49224C11.3425 1.81093 12.0648 2.2571 12.7028 2.83075L14.5348 1.00055C14.8538 0.991441 15.0087 1.09615 14.9996 1.31468L14.9859 5.65799Z" />
	),
	delivery: (
		<path d="M11.1464 2.14645C11.0527 2.05268 10.9255 2 10.7929 2H10H9C8.44771 2 8 2.44772 8 3C8 3.55228 8.44771 4 9 4H9.5C9.77614 4 10 4.22386 10 4.5V7V8.13908C10 9.37496 8.89027 10.315 7.6712 10.1119L7.4178 10.0696C7.17671 10.0295 7 9.82086 7 9.57644V8.5C7 8.22386 6.77614 8 6.5 8H2.20711C2.0745 8 1.94665 8.0521 1.85577 8.14867C0.665528 9.41333 0 11.0866 0 12.8284C0 12.9232 0.0768157 13 0.171573 13H1.5C1.77614 13 1.99359 13.2273 2.06171 13.4949C2.28197 14.3601 3.06626 15 4 15C4.93374 15 5.71803 14.3601 5.93829 13.4949C6.00641 13.2273 6.22386 13 6.5 13H9.5C9.77614 13 9.99359 13.2273 10.0617 13.4949C10.282 14.3601 11.0663 15 12 15C12.9337 15 13.718 14.3601 13.9383 13.4949C14.0064 13.2273 14.2239 13 14.5 13H15.5C15.7761 13 16.0031 12.7753 15.9701 12.5012C15.7798 10.9187 14.6939 9.56465 13.1539 9.05132C13.057 9.01901 12.981 8.94296 12.9487 8.84605L12.1371 6.41139C12.0584 6.17534 12.1653 5.91735 12.3879 5.80607L12.759 5.62048C13.3695 5.31523 13.5016 4.50158 13.0189 4.01894L11.1464 2.14645ZM2.5 3C2.22386 3 2 3.22386 2 3.5V6.5C2 6.77614 2.22386 7 2.5 7H5.5C5.77614 7 6 6.77614 6 6.5V3.5C6 3.22386 5.77614 3 5.5 3H2.5ZM5 13C5 13.5523 4.55228 14 4 14C3.44772 14 3 13.5523 3 13C3 12.4477 3.44772 12 4 12C4.55228 12 5 12.4477 5 13ZM12 14C12.5523 14 13 13.5523 13 13C13 12.4477 12.5523 12 12 12C11.4477 12 11 12.4477 11 13C11 13.5523 11.4477 14 12 14Z" />
	),
	logout: (
		<path d="M5.00002 1C3.34317 1 2.00002 2.34315 2.00002 4V12C2.00002 13.6569 3.34317 15 5.00002 15H11.764C12.9003 15 13.9391 14.358 14.4472 13.3416L14.8945 12.4472C15.1414 11.9532 14.9412 11.3526 14.4472 11.1056C13.9533 10.8586 13.3526 11.0588 13.1056 11.5528L12.6584 12.4472C12.489 12.786 12.1427 13 11.764 13H5.00002C4.44774 13 4.00002 12.5523 4.00002 12V4C4.00002 3.44772 4.44774 3 5.00002 3H11.764C12.1427 3 12.489 3.214 12.6584 3.55279L13.1056 4.44721C13.3526 4.94119 13.9533 5.14142 14.4472 4.89443C14.9412 4.64744 15.1414 4.04676 14.8945 3.55279L14.4472 2.65836C13.9391 1.64201 12.9003 1 11.764 1H5.00002ZM9.79292 4.79289C9.40239 5.18342 9.40239 5.81658 9.79292 6.20711L10.5858 7L6.00002 7C5.44774 7 5.00002 7.44771 5.00002 8C5.00002 8.55228 5.44774 9 6.00002 9L10.5858 9L9.79292 9.79289C9.40239 10.1834 9.40239 10.8166 9.79292 11.2071C10.1834 11.5976 10.8166 11.5976 11.2071 11.2071L13.7071 8.70711C14.0977 8.31658 14.0977 7.68342 13.7071 7.29289L11.2071 4.79289C10.8166 4.40237 10.1834 4.40237 9.79292 4.79289Z" />
	)
}

export type IconProps = {
	type: keyof typeof iconTypes
	color?: string
}

export const Icon: FC<IconProps> = ({ type, color }) => {
	const { spacing } = useTheme()
	const size = parseInt(spacing.l)

	const svgPath = iconTypes[type]

	if (!svgPath) return null

	return (
		<StyledIcon viewBox={`0 0 ${size} ${size}`} xmlns="http://www.w3.org/2000/svg" color={color}>
			{svgPath}
		</StyledIcon>
	)
}
